import{_ as s,c as i,o as e,a7 as a}from"./chunks/framework.BTZ5G5k6.js";const u=JSON.parse('{"title":"Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference.md","filePath":"reference.md","lastUpdated":null}'),t={name:"reference.md"},l=a(`<h1 id="Reference" tabindex="-1">Reference <a class="header-anchor" href="#Reference" aria-label="Permalink to &quot;Reference {#Reference}&quot;">​</a></h1><ul><li><a href="#AIHelpMe.ALLOWED_PACKS"><code>AIHelpMe.ALLOWED_PACKS</code></a></li><li><a href="#AIHelpMe.ALLOWED_PREFERENCES"><code>AIHelpMe.ALLOWED_PREFERENCES</code></a></li><li><a href="#AIHelpMe.LOADED_PACKS"><code>AIHelpMe.LOADED_PACKS</code></a></li><li><a href="#AIHelpMe.PREFERENCES"><code>AIHelpMe.PREFERENCES</code></a></li><li><a href="#AIHelpMe.RAG_CONFIGURATIONS"><code>AIHelpMe.RAG_CONFIGURATIONS</code></a></li><li><a href="#AIHelpMe.aihelp-Tuple{PromptingTools.Experimental.RAGTools.AbstractRAGConfig, PromptingTools.Experimental.RAGTools.AbstractChunkIndex, AbstractString}"><code>AIHelpMe.aihelp</code></a></li><li><a href="#AIHelpMe.docdata_to_source-Tuple{AbstractDict}"><code>AIHelpMe.docdata_to_source</code></a></li><li><a href="#AIHelpMe.docextract"><code>AIHelpMe.docextract</code></a></li><li><a href="#AIHelpMe.docextract"><code>AIHelpMe.docextract</code></a></li><li><a href="#AIHelpMe.docextract-Tuple{Module}"><code>AIHelpMe.docextract</code></a></li><li><a href="#AIHelpMe.docextract"><code>AIHelpMe.docextract</code></a></li><li><a href="#AIHelpMe.find_new_chunks-Tuple{AbstractVector{&lt;:AbstractString}, AbstractVector{&lt;:AbstractString}}"><code>AIHelpMe.find_new_chunks</code></a></li><li><a href="#AIHelpMe.get_config_key"><code>AIHelpMe.get_config_key</code></a></li><li><a href="#AIHelpMe.get_preferences-Tuple{String}"><code>AIHelpMe.get_preferences</code></a></li><li><a href="#AIHelpMe.last_result-Tuple{}"><code>AIHelpMe.last_result</code></a></li><li><a href="#AIHelpMe.load_index!"><code>AIHelpMe.load_index!</code></a></li><li><a href="#AIHelpMe.load_index!-Tuple{AbstractString}"><code>AIHelpMe.load_index!</code></a></li><li><a href="#AIHelpMe.load_index!-Tuple{PromptingTools.Experimental.RAGTools.AbstractChunkIndex}"><code>AIHelpMe.load_index!</code></a></li><li><a href="#AIHelpMe.load_index_hdf5-Tuple{AbstractString}"><code>AIHelpMe.load_index_hdf5</code></a></li><li><a href="#AIHelpMe.set_preferences!-Tuple{Vararg{Pair{String}}}"><code>AIHelpMe.set_preferences!</code></a></li><li><a href="#AIHelpMe.update_index"><code>AIHelpMe.update_index</code></a></li><li><a href="#AIHelpMe.update_pipeline!"><code>AIHelpMe.update_pipeline!</code></a></li><li><a href="#PromptingTools.Experimental.RAGTools.build_index"><code>PromptingTools.Experimental.RAGTools.build_index</code></a></li><li><a href="#PromptingTools.Experimental.RAGTools.build_index-Tuple{Module}"><code>PromptingTools.Experimental.RAGTools.build_index</code></a></li><li><a href="#AIHelpMe.@aihelp!_str-Tuple{Any, Vararg{Any}}"><code>AIHelpMe.@aihelp!_str</code></a></li><li><a href="#AIHelpMe.@aihelp_str-Tuple{Any, Vararg{Any}}"><code>AIHelpMe.@aihelp_str</code></a></li></ul><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.ALLOWED_PACKS" href="#AIHelpMe.ALLOWED_PACKS">#</a> <b><u>AIHelpMe.ALLOWED_PACKS</u></b> — <i>Constant</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ALLOWED PACKS</span></span></code></pre></div><p>Currently available packs are:</p><ul><li><p><code>:julia</code> - Julia documentation, standard library docstrings and a few extras (for Julia v1.10)</p></li><li><p><code>:tidier</code> - Tidier.jl organization documentation (as of 7th April 2024)</p></li><li><p><code>:makie</code> - Makie.jl organization documentation (as of 30th March 2024)</p></li></ul><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/pipeline_defaults.jl#L7-L14" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.ALLOWED_PREFERENCES" href="#AIHelpMe.ALLOWED_PREFERENCES">#</a> <b><u>AIHelpMe.ALLOWED_PREFERENCES</u></b> — <i>Constant</i>. <p>Keys that are allowed to be set via <code>set_preferences!</code></p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/user_preferences.jl#L19" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.LOADED_PACKS" href="#AIHelpMe.LOADED_PACKS">#</a> <b><u>AIHelpMe.LOADED_PACKS</u></b> — <i>Constant</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LOADED_PACKS</span></span></code></pre></div><p>The knowledge packs that are currently loaded in the index.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/pipeline_defaults.jl#L17-L21" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.PREFERENCES" href="#AIHelpMe.PREFERENCES">#</a> <b><u>AIHelpMe.PREFERENCES</u></b> — <i>Constant</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PREFERENCES</span></span></code></pre></div><p>You can set preferences for AIHelpMe by using the <code>set_preferences!</code>. It will create a <code>LocalPreferences.toml</code> file in your current directory and will reload your prefences from there.</p><p>Check your preferences by calling <code>get_preferences(key::String)</code>.</p><p><strong>Available Preferences (for <code>set_preferences!</code>)</strong></p><ul><li><p><code>MODEL_CHAT</code>: The default model to use for aigenerate and most ai* calls. See <code>PromptingTools.MODEL_REGISTRY</code> for a list of available models or define your own with <code>PromptingTools.register_model!</code>.</p></li><li><p><code>MODEL_EMBEDDING</code>: The default model to use for aiembed (embedding documents). See <code>PromptingTools.MODEL_REGISTRY</code> for a list of available models or define your own with <code>PromptingTools.register_model!</code>.</p></li><li><p><code>EMBEDDING_DIMENSION</code>: The dimension of the embedding vector. Defaults to 1024 (truncated OpenAI embedding). Set to 0 to use the maximum allowed dimension.</p></li><li><p><code>LOADED_PACKS</code>: The knowledge packs that are loaded on restart/refresh (<code>load_index!()</code>).</p></li></ul><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/user_preferences.jl#L3-L16" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.RAG_CONFIGURATIONS" href="#AIHelpMe.RAG_CONFIGURATIONS">#</a> <b><u>AIHelpMe.RAG_CONFIGURATIONS</u></b> — <i>Constant</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RAG_CONFIGURATIONS</span></span></code></pre></div><p>A dictionary of RAG configurations, keyed by a unique symbol (eg, <code>bronze</code>). Each entry contains a dictionary with keys <code>:config</code> and <code>:kwargs</code>, where <code>:config</code> is the RAG configuration object (<code>AbstractRAGConfig</code>) and <code>:kwargs</code> the NamedTuple of corresponding kwargs.</p><p>Available Options:</p><ul><li><p><code>:bronze</code>: A simple configuration for a bronze pipeline, using truncated binary embeddings (dimensionality: 1024) and no re-ranking or refinement.</p></li><li><p><code>:silver</code>: A simple configuration for a bronze pipeline, using truncated binary embeddings (dimensionality: 1024) but also enables re-ranking step.</p></li><li><p><code>:gold</code>: A more complex configuration, similar to <code>:simpler</code>, but using a standard embeddings (dimensionality: 3072, type: Float32). It also leverages re-ranking and refinement with a web-search.</p></li></ul><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/pipeline_defaults.jl#L40-L51" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.aihelp-Tuple{PromptingTools.Experimental.RAGTools.AbstractRAGConfig, PromptingTools.Experimental.RAGTools.AbstractChunkIndex, AbstractString}" href="#AIHelpMe.aihelp-Tuple{PromptingTools.Experimental.RAGTools.AbstractRAGConfig, PromptingTools.Experimental.RAGTools.AbstractChunkIndex, AbstractString}">#</a> <b><u>AIHelpMe.aihelp</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aihelp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([cfg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RT.AbstractRAGConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RT.AbstractChunkIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    question</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODEL_CHAT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    return_all</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates a response for a given question using a Retrieval-Augmented Generation (RAG) approach over Julia documentation (or any other knowledge pack).</p><p>If you return RAGResult (<code>return_all=true</code>), you can use <code>AIHelpMe.pprint</code> to pretty-print the result and see the sources/&quot;support&quot; scores for each chunk of the answer.</p><p>The answer will depend on the knowledge packs loaded, see <code>?load_index!</code>.</p><p>You can also use add docstrings from any package you have loaded (or all of them), see <code>?update_index</code> and make sure to provide your new updated index explicitly!</p><p><strong>Arguments</strong></p><ul><li><p><code>cfg::AbstractRAGConfig</code>: The RAG configuration.</p></li><li><p><code>index::AbstractChunkIndex</code>: The chunk index (contains chunked and embedded documentation).</p></li><li><p><code>question::AbstractString</code>: The question to be answered.</p></li><li><p><code>model::String</code>: A chat/generation model used for generating the final response, default is <code>MODEL_CHAT</code>.</p></li><li><p><code>return_all::Bool</code>: If <code>true</code>, returns a <code>RAGResult</code> (provides details of the pipeline + allows pretty-printing with <code>pprint(result)</code>).</p></li><li><p><code>search::Union{Nothing, Bool}</code>: If <code>true</code>, uses TavilySearchRefiner to add web search results to the context. See <code>?PromptingTools.Experimental.RAGTools.TavilySearchRefiner</code> for details.</p></li><li><p><code>rerank::Union{Nothing, Bool}</code>: If <code>true</code>, uses CohereReranker to rerank the chunks. See <code>?PromptingTools.Experimental.RAGTools.CohereReranker</code> for details.</p></li></ul><p><strong>Returns</strong></p><ul><li><p>If <code>return_all</code> is <code>false</code>, returns the generated message (<code>msg</code>).</p></li><li><p>If <code>return_all</code> is <code>true</code>, returns a <code>RAGResult</code> (provides details of the pipeline + allows pretty-printing with <code>pprint(result)</code>)</p></li></ul><p><strong>Notes</strong></p><ul><li>Function always saves the last context in global <code>LAST_RESULT</code> for inspection of sources/context regardless of <code>return_all</code> value.</li></ul><p><strong>Examples</strong></p><p>Using <code>aihelp</code> to get a response for a question:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build_index</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> build_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># create an index that contains Makie.jl documentation (or any loaded package that you have)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;How to make a barplot in Makie.jl?&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, question)</span></span></code></pre></div><p>If you want a pretty-printed answer with highlighted sources, you can use the <code>return_all</code> argument and <code>pprint</code> utility:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pprint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, question; return_all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pprint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span></code></pre></div><p>If you loaded a knowledge pack, you do not have to provide the index.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load Makie knowledge pack</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:makie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;How to make a barplot in Makie.jl?&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(question)</span></span></code></pre></div><p>If you know it&#39;s a hard question, you can use the <code>search</code> and <code>rerank</code> arguments to add web search results to the context and rerank the chunks.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pprint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;How to make a barplot in Makie.jl?&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(question; search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rerank </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, return_all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pprint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nicer display with sources for each chunk/sentences (look for square brackets)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/generation.jl#L1-L70" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.docdata_to_source-Tuple{AbstractDict}" href="#AIHelpMe.docdata_to_source-Tuple{AbstractDict}">#</a> <b><u>AIHelpMe.docdata_to_source</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docdata_to_source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a source path from a given DocStr record</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.docextract" href="#AIHelpMe.docextract">#</a> <b><u>AIHelpMe.docextract</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docextract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DocStr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span></span></code></pre></div><p>&quot;)</p><p>Extracts the documentation from a DocStr record. Separates the individual docs within <code>DocStr</code> with <code>sep</code>.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L14-L21" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.docextract-2" href="#AIHelpMe.docextract-2">#</a> <b><u>AIHelpMe.docextract</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docextract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Module}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Docs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modules)</span></span></code></pre></div><p>Extracts the documentation from a vector of <code>modules</code>.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L71-L75" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.docextract-3" href="#AIHelpMe.docextract-3">#</a> <b><u>AIHelpMe.docextract</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docextract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MultiDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span></span></code></pre></div><p>&quot;)</p><p>Extracts the documentation from a MultiDoc record (separates the individual docs within <code>DocStr</code> with <code>sep</code>)</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L35-L41" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.docextract-Tuple{Module}" href="#AIHelpMe.docextract-Tuple{Module}">#</a> <b><u>AIHelpMe.docextract</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docextract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the documentation from a given (loaded) module.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L50-L54" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.find_new_chunks-Tuple{AbstractVector{&lt;:AbstractString}, AbstractVector{&lt;:AbstractString}}" href="#AIHelpMe.find_new_chunks-Tuple{AbstractVector{&lt;:AbstractString}, AbstractVector{&lt;:AbstractString}}">#</a> <b><u>AIHelpMe.find_new_chunks</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">find_new_chunks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(old_chunks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractString}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    new_chunks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractString}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Identifies the new chunks in <code>new_chunks</code> that are not present in <code>old_chunks</code>.</p><p>Returns a mask of chunks that are new (not present in <code>old_chunks</code>).</p><p>Uses SHA256 hashes to dedupe the strings quickly and effectively.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/utils.jl#L3-L12" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.get_config_key" href="#AIHelpMe.get_config_key">#</a> <b><u>AIHelpMe.get_config_key</u></b> — <i>Function</i>. <p>Returns the configuration key for the given <code>cfg</code> and <code>kwargs</code> to use the relevant artifacts.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/pipeline_defaults.jl#L131" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.get_preferences-Tuple{String}" href="#AIHelpMe.get_preferences-Tuple{String}">#</a> <b><u>AIHelpMe.get_preferences</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_preferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get preferences for AIHelpMe. See <code>?PREFERENCES</code> for more information.</p><p>See also: <code>set_preferences!</code></p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_preferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MODEL_CHAT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/user_preferences.jl#L61-L72" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.last_result-Tuple{}" href="#AIHelpMe.last_result-Tuple{}">#</a> <b><u>AIHelpMe.last_result</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last_result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the RAGResult from the last <code>aihelp</code> call. It can be useful to see the sources/references used by the AI model to generate the response.</p><p>If you&#39;re using <code>aihelp()</code> make sure to set <code>return_all = true</code> to return the RAGResult.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/utils.jl#L32-L39" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.load_index!" href="#AIHelpMe.load_index!">#</a> <b><u>AIHelpMe.load_index!</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(packs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Symbol}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LOADED_PACKS[]; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pack</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Loads one or more <code>packs</code> into the main index from our pre-built artifacts.</p><p>Availability of packs might vary depending on your pipeline configuration (ie, whether we have the correct embeddings for it). See <code>AIHelpMe.ALLOWED_PACKS</code></p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:julia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Or multiple packs</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:julia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:makie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tidier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/loading.jl#L48-L66" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.load_index!-Tuple{AbstractString}" href="#AIHelpMe.load_index!-Tuple{AbstractString}">#</a> <b><u>AIHelpMe.load_index!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Loads the serialized index in <code>file_path</code> into the global variable <code>MAIN_INDEX</code>.</p><p>Supports <code>.jls</code> (serialized Julia object) and <code>.hdf5</code> (HDF5.jl) files.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/loading.jl#L24-L31" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.load_index!-Tuple{PromptingTools.Experimental.RAGTools.AbstractChunkIndex}" href="#AIHelpMe.load_index!-Tuple{PromptingTools.Experimental.RAGTools.AbstractChunkIndex}">#</a> <b><u>AIHelpMe.load_index!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RT.AbstractChunkIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Loads the provided <code>index</code> into the global variable <code>MAIN_INDEX</code>.</p><p>If you don&#39;t have an <code>index</code> yet, use <code>build_index</code> to build one from your currently loaded packages (see <code>?build_index</code>)</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># build an index from some modules, keep empty to embed all loaded modules (eg, \`build_index()\`) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([DataFramesMeta, DataFrames, CSV])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AIH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/loading.jl#L2-L16" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.load_index_hdf5-Tuple{AbstractString}" href="#AIHelpMe.load_index_hdf5-Tuple{AbstractString}">#</a> <b><u>AIHelpMe.load_index_hdf5</u></b> — <i>Method</i>. <p>Hacky function to load a HDF5 file into a ChunkIndex object. Only bare-bone ChunkIndex is supported right now.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/utils.jl#L42" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.set_preferences!-Tuple{Vararg{Pair{String}}}" href="#AIHelpMe.set_preferences!-Tuple{Vararg{Pair{String}}}">#</a> <b><u>AIHelpMe.set_preferences!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_preferences!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pairs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{String, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span></code></pre></div><p>Set preferences for AIHelpMe. See <code>?PREFERENCES</code> for more information.</p><p>See also: <code>get_preferences</code></p><p><strong>Example</strong></p><p>Change your API key and default model:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># EMBEDDING_DIMENSION of 0 means the maximum allowed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_preferences!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MODEL_CHAT&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;llama3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MODEL_EMBEDDING&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nomic-embed-text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EMBEDDING_DIMENSION&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/user_preferences.jl#L26-L40" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.update_index" href="#AIHelpMe.update_index">#</a> <b><u>AIHelpMe.update_index</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RT.AbstractChunkIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAIN_INDEX[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Module}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Docs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modules;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Updates the provided <code>index</code> with the documentation of the provided <code>modules</code>.</p><p>Deduplicates against the <code>index.sources</code> and embeds only the new document chunks (as measured by a hash).</p><p>Returns the updated <code>index</code> (new instance).</p><p>For available configurations and customizations, see the corresponding modules and functions of <code>PromptingTools.Experimental.RAGTools</code> (eg, <code>build_index</code>).</p><p><strong>Example</strong></p><p>If you loaded some new packages and want to add them to your MAIN_INDEX (or any <code>index</code> you use), run:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To update the MAIN_INDEX as well</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AHM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">load_index!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To update an explicit index</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIHelpMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/loading.jl#L89-L112" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.update_pipeline!" href="#AIHelpMe.update_pipeline!">#</a> <b><u>AIHelpMe.update_pipeline!</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_pipeline!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :bronze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; model_chat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODEL_CHAT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model_embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODEL_EMBEDDING, verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, embedding_dimension</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EMBEDDING_DIMENSION)</span></span></code></pre></div><p>Updates the default RAG pipeline to one of the pre-configuration options and sets the requested chat and embedding models.</p><p>This is a good way to update model types to change between OpenAI models and Ollama models.</p><p>See available pipeline options via <code>keys(RAG_CONFIGURATIONS)</code>.</p><p>Logic:</p><ul><li><p>Updates the global <code>MODEL_CHAT</code> and <code>MODEL_EMBEDDING</code> to the requested models.</p></li><li><p>Update the global <code>EMBEDDING_DIMENSION</code> for the requested embedding dimensionality after truncation (<code>embedding_dimension</code>).</p></li><li><p>Updates the global <code>RAG_CONFIG</code> and <code>RAG_KWARGS</code> to the requested <code>option</code>.</p></li><li><p>Updates the global <code>LOADED_CONFIG_KEY</code> to the configuration key for the given <code>option</code> and <code>kwargs</code> (used by the artifact system to download the correct knowledge packs).</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_pipeline!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bronze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; model_chat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt4t&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>You don&#39;t need to re-load your index if you just change the chat model.</p><p>You can switch the pipeline to Ollama models: Note: only 1 Ollama embedding model is supported for embeddings now! You must select &quot;nomic-embed-text&quot; and if you do, set <code>embedding_dimension=0</code> (maximum dimension available)</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_pipeline!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bronze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; model_chat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;llama3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model_embedding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nomic-embed-text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, embedding_dimension</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You must download the corresponding knowledge packs via \`load_index!\` (because you changed the embedding model)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_index!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/pipeline_defaults.jl#L142-L173" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="PromptingTools.Experimental.RAGTools.build_index" href="#PromptingTools.Experimental.RAGTools.build_index">#</a> <b><u>PromptingTools.Experimental.RAGTools.build_index</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Module}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Docs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modules; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Build index from the documentation of the currently loaded modules. If <code>modules</code> is empty, it will use all currently loaded modules.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L116-L122" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="PromptingTools.Experimental.RAGTools.build_index-Tuple{Module}" href="#PromptingTools.Experimental.RAGTools.build_index-Tuple{Module}">#</a> <b><u>PromptingTools.Experimental.RAGTools.build_index</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Build <code>index</code> from the documentation of a given module <code>mod</code>.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/preparation.jl#L86-L90" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.@aihelp!_str-Tuple{Any, Vararg{Any}}" href="#AIHelpMe.@aihelp!_str-Tuple{Any, Vararg{Any}}">#</a> <b><u>AIHelpMe.@aihelp!_str</u></b> — <i>Macro</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aihelp!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_question&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[model_alias] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIMessage</span></span></code></pre></div><p>The <code>aihelp!&quot;&quot;</code> string macro is used to continue a previous conversation with the AI model.</p><p>It appends the new user prompt to the last conversation in the tracked history (in <code>AIHelpMe.CONV_HISTORY</code>) and generates a response based on the entire conversation context. If you want to see the previous conversation, you can access it via <code>AIHelpMe.CONV_HISTORY</code>, which keeps at most last <code>PromptingTools.MAX_HISTORY_LENGTH</code> conversations.</p><p>It does NOT provide new context from the documentation. To do that, start a new conversation with <code>aihelp&quot;&lt;question&gt;&quot;</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>user_question</code> (String): The follow up question to be added to the existing conversation.</p></li><li><p><code>model_alias</code> (optional, any): Specify the model alias of the AI model to be used (see <code>PT.MODEL_ALIASES</code>). If not provided, the default model is used.</p></li></ul><p><strong>Returns</strong></p><p><code>AIMessage</code> corresponding to the new user prompt, considering the entire conversation history.</p><p><strong>Example</strong></p><p>To continue a conversation:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># start conversation as normal</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aihelp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;How to create a dictionary?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... wait for reply and then react to it:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># continue the conversation (notice that you can change the model, eg, to more powerful one for better answer)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aihelp!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Can you create it from named tuple?&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gpt4t</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AIMessage(&quot;Yes, you can create a dictionary from a named tuple ...&quot;)</span></span></code></pre></div><p><strong>Usage Notes</strong></p><ul><li><p>This macro should be used when you want to maintain the context of an ongoing conversation (ie, the last <code>ai&quot;&quot;</code> message).</p></li><li><p>It automatically accesses and updates the global conversation history.</p></li><li><p>If no conversation history is found, it raises an assertion error, suggesting to initiate a new conversation using <code>ai&quot;&quot;</code> instead.</p></li></ul><p><strong>Important</strong></p><p>Ensure that the conversation history is not too long to maintain relevancy and coherence in the AI&#39;s responses. The history length is managed by <code>MAX_HISTORY_LENGTH</code>.</p><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/macros.jl#L52-L89" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="AIHelpMe.@aihelp_str-Tuple{Any, Vararg{Any}}" href="#AIHelpMe.@aihelp_str-Tuple{Any, Vararg{Any}}">#</a> <b><u>AIHelpMe.@aihelp_str</u></b> — <i>Macro</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aihelp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_question&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[model_alias] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIMessage</span></span></code></pre></div><p>The <code>aihelp&quot;&quot;</code> string macro generates an AI response to a given user question by using <code>aihelp</code> under the hood. It will automatically try to provide the most relevant bits of the documentation (from the index) to the LLM to answer the question.</p><p>See also <code>aihelp!&quot;&quot;</code> if you want to reply to the provided message / continue the conversation.</p><p><strong>Arguments</strong></p><ul><li><p><code>user_question</code> (String): The question to be answered by the AI model.</p></li><li><p><code>model_alias</code> (optional, any): Provide model alias of the AI model (see <code>MODEL_ALIASES</code>).</p></li></ul><p><strong>Returns</strong></p><p><code>AIMessage</code> corresponding to the input prompt.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, how are you?&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AIMessage(&quot;Hello! I&#39;m an AI assistant, so I don&#39;t have feelings, but I&#39;m here to help you. How can I assist you today?&quot;)</span></span></code></pre></div><p>If you want to interpolate some variables or additional context, simply use string interpolation:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;What is \`$a+$a\`?&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AIMessage(&quot;The sum of \`1+1\` is \`2\`.&quot;)</span></span></code></pre></div><p>If you want to use a different model, eg, GPT-3.5 Turbo, you can provide its alias as a flag:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aihelp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;What is \`1.23 * 100 + 1\`?&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gpt3t</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AIMessage(&quot;The answer is 124.&quot;)</span></span></code></pre></div><p><a href="https://github.com/svilupp/AIHelpMe.jl/blob/526f18304cbc621cbbec8e12b510ec0dd1ddad9f/src/macros.jl#L1-L34" target="_blank" rel="noreferrer">source</a></p></div><br>`,54),n=[l];function p(d,o,h,r,k,c){return e(),i("div",null,n)}const E=s(t,[["render",p]]);export{u as __pageData,E as default};
